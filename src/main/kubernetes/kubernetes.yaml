apiVersion: sql.cnrm.cloud.google.com/v1beta1
kind: SQLUser
metadata:
  name: items-api
spec:
  instanceRef:
    name: production
  host: "%"
  password:
    valueFrom:
      secretKeyRef:
        name: items-api
        key: password
---
apiVersion: v1
kind: Secret
metadata:
  name: items-api
  namespace: default
data:
  password: password
---
apiVersion: sql.cnrm.cloud.google.com/v1beta1
kind: SQLInstance
metadata:
  name: production
spec:
  databaseVersion: POSTGRES_9_6
  region: europe-west6
  settings:
    tier: db-n1-standard-1
---
apiVersion: sql.cnrm.cloud.google.com/v1beta1
kind: SQLDatabase
metadata:
  name: items-db
spec:
  instanceRef:
    name: production
---
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMServiceAccount
metadata:
  name: items-api
  namespace: default
spec:
  displayName: items-api
---
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicy
metadata:
  name: items-api
  namespace: default
spec:
  resourceRef:
    apiVersion: iam.cnrm.cloud.google.com/v1beta1
    kind: IAMServiceAccount
    name: items-api
  bindings:
    - role: roles/iam.workloadIdentityUser
      members:
        - serviceAccount:items-project-1.svc.id.goog[default/items-api]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    iam.gke.io/gcp-service-account: items-api@items-project-1.iam.gserviceaccount.com
  name: items-api
  namespace: default
---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "items-api"
  namespace: "default"
  labels:
    app: "items-api"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "items-api"
  template:
    metadata:
      labels:
        app: "items-api"
    spec:
      serviceAccountName: "items-api"
      containers:
        - name: "items-api-sha256-1"
          image: "gcr.io/items-project-1/items-api"
          env:
            - name: "SPRING_DATASOURCE_URL"
              value: "jdbc:postgresql://localhost:5432/items-db"
            - name: "SPRING_DATASOURCE_USERNAME"
              value: "items-api"
            - name: "SPRING_DATASOURCE_PASSWORD"
              value: "password"
        - name: cloud-sql-proxy
          # It is recommended to use the latest version of the Cloud SQL proxy
          # Make sure to update on a regular schedule!
          image: gcr.io/cloudsql-docker/gce-proxy:1.17
          command:
            - "/cloud_sql_proxy"

            # If connecting from a VPC-native GKE cluster, you can use the
            # following flag to have the proxy connect over private IP
            # - "-ip_address_types=PRIVATE"

            # Replace DB_PORT with the port the proxy should listen on
            # Defaults: MySQL: 3306, Postgres: 5432, SQLServer: 1433
            - "-instances=items-project-1:europe-west6:item-db=tcp:5432"
          securityContext:
            # The default Cloud SQL proxy image runs as the
            # "nonroot" user and group (uid: 65532) by default.
            runAsNonRoot: true
---
apiVersion: "autoscaling/v2beta1"
kind: "HorizontalPodAutoscaler"
metadata:
  name: "items-api-hpa-homr"
  namespace: "default"
  labels:
    app: "items-api"
spec:
  scaleTargetRef:
    kind: "Deployment"
    name: "items-api"
    apiVersion: "apps/v1"
  minReplicas: 1
  maxReplicas: 5
  metrics:
    - type: "Resource"
      resource:
        name: "cpu"
        targetAverageUtilization: 80
---
apiVersion: "v1"
kind: "Service"
metadata:
  name: "items-api-service"
  namespace: "default"
  labels:
    app: "items-api"
spec:
  ports:
    - protocol: "TCP"
      port: 80
      targetPort: 8080
  selector:
    app: "items-api"
  type: "LoadBalancer"
  loadBalancerIP: ""
